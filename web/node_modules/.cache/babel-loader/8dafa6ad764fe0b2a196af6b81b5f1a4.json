{"remainingRequest":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/thread-loader/dist/cjs.js!/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/babel-loader/lib/index.js!/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/eslint-loader/index.js??ref--13-0!/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/src/utils/request.js","dependencies":[{"path":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/src/utils/request.js","mtime":1623674202289},{"path":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogJycsCiAgLy8gdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgdGltZW91dDogNTAwMDAgLy8gcmVxdWVzdCB0aW1lb3V0Cgp9KTsgLy8gcmVxdWVzdCBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIGRvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50CiAgY29uZmlnLmhlYWRlcnMudG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAvLyBkbyBzb21ldGhpbmcgd2l0aCByZXF1ZXN0IGVycm9yCiAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCi8qKgogKiBJZiB5b3Ugd2FudCB0byBnZXQgaHR0cCBpbmZvcm1hdGlvbiBzdWNoIGFzIGhlYWRlcnMgb3Igc3RhdHVzCiAqIFBsZWFzZSByZXR1cm4gIHJlc3BvbnNlID0+IHJlc3BvbnNlCiAqLwoKLyoqCiAqIERldGVybWluZSB0aGUgcmVxdWVzdCBzdGF0dXMgYnkgY3VzdG9tIGNvZGUKICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUKICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQogKi8KZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIGlmIHRoZSBjdXN0b20gY29kZSBpcyBub3QgMTAwLCBpdCBpcyBqdWRnZWQgYXMgYW4gZXJyb3IuCgogIGlmIChyZXMuY29kZSA9PSAyMDApIHsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMubXNnIHx8ICdFcnJvciBjaGVjayB5b3VyIHRva2VuIG9yIG1ldGhvZCcsCiAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgIGR1cmF0aW9uOiAyICogMTAwMAogICAgfSk7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5tc2cgfHwgJ0Vycm9yJykpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcmVzOwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ2VycicgKyBlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICBNZXNzYWdlKHsKICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsCiAgICB0eXBlOiAnZXJyb3InLAogICAgZHVyYXRpb246IDIgKiAxMDAwCiAgfSk7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2UucmVxdWVzdDs="},{"version":3,"sources":["/Users/quinlan/Documents/Workspace/dbMisLoc_backup/version6/dbmisloc_202203102100_themeChange/web/src/utils/request.js"],"names":["axios","Message","service","create","baseURL","timeout","interceptors","request","use","config","headers","token","localStorage","getItem","error","console","log","Promise","reject","response","res","data","code","message","msg","type","duration","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CACA;;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,EADkB;AACd;AACb;AACAC,EAAAA,OAAO,EAAE,KAHkB,CAGZ;;AAHY,CAAb,CAAhB,C,CAMA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;AAEA,SAAOJ,MAAP;AACD,CANH,EAOE,UAAAK,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAXH,E,CAcA;;AACAZ,OAAO,CAACI,YAAR,CAAqBa,QAArB,CAA8BX,GAA9B;AACE;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACE,UAAAW,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB,CADU,CAGV;;AACA,MAAID,GAAG,CAACE,IAAJ,IAAY,GAAhB,EAAqB;AACnBrB,IAAAA,OAAO,CAAC;AACNsB,MAAAA,OAAO,EAAEH,GAAG,CAACI,GAAJ,IAAW,kCADd;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAD,CAAP;AAKA,WAAOT,OAAO,CAACC,MAAR,CAAe,IAAIS,KAAJ,CAAUP,GAAG,CAACI,GAAJ,IAAW,OAArB,CAAf,CAAP;AACD,GAPD,MAOO;AACL,WAAOJ,GAAP;AACD;AACF,CAzBH,EA0BE,UAAAN,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAC3Bb,EAAAA,OAAO,CAAC;AACNsB,IAAAA,OAAO,EAAET,KAAK,CAACS,OADT;AAENE,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAOT,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAlCH;AAqCA,eAAeZ,OAAO,CAACK,OAAvB","sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\n// create an axios instance\nconst service = axios.create({\n  baseURL: '', // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 50000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n    config.headers.token = localStorage.getItem('token')\n\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n   */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n\n    // if the custom code is not 100, it is judged as an error.\n    if (res.code == 200) {\n      Message({\n        message: res.msg || 'Error check your token or method',\n        type: 'error',\n        duration: 2 * 1000\n      })\n      return Promise.reject(new Error(res.msg || 'Error'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 2 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service.request\n"]}]}