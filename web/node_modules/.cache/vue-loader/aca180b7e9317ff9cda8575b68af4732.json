{"remainingRequest":"/Users/quinlan/Desktop/dbmisloc/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quinlan/Desktop/dbmisloc/web/src/views/Browse.vue?vue&type=template&id=137d6444&scoped=true&","dependencies":[{"path":"/Users/quinlan/Desktop/dbmisloc/web/src/views/Browse.vue","mtime":1623170740596},{"path":"/Users/quinlan/Desktop/dbmisloc/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quinlan/Desktop/dbmisloc/web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/quinlan/Desktop/dbmisloc/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quinlan/Desktop/dbmisloc/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}